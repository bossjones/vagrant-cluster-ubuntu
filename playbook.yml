---
# SOURCE: https://github.com/tIsGoud/Docker-Swarm-deployed-with-Ansible/blob/master/site.yml
# This playbook deploys the swarm configuration on multiple Docker hosts
# Determine the processor architecture of the machines defined in the inventory
- name: Determine the processor of the target platform
  hosts: all
  vars:
    reg_expression:
      - ".*hard.*memlock.*unlimited"
      - ".*soft.*memlock.*unlimited"
      - ".*hard.*nofile.*65536"
    insertvalue:
      - "* hard memlock unlimited"
      - "* soft memlock unlimited"
      - "* hard nofile 65536"
  tasks:
    - set_fact: architecture="{{ ((ansible_architecture|truncate(3,true,'')) == 'arm') | ternary('ARM','X86') }}"

- hosts: all
  vars:
    reg_expression:
      - ".*hard.*memlock.*unlimited"
      - ".*soft.*memlock.*unlimited"
      - ".*hard.*nofile.*65536"
    insertvalue:
      - "* hard memlock unlimited"
      - "* soft memlock unlimited"
      - "* hard nofile 65536"
  tasks:
    - debug: msg="architecture is set to {{ architecture }}"

- hosts: all
  vars:
    reg_expression:
      - ".*hard.*memlock.*unlimited"
      - ".*soft.*memlock.*unlimited"
      - ".*hard.*nofile.*65536"
    insertvalue:
      - "* hard memlock unlimited"
      - "* soft memlock unlimited"
      - "* hard nofile 65536"
  become: yes
  become_method: sudo
  # vars_files:
  #   - vars/main.yml
  roles:
    - role: ansible-role-java
    - role: ansible-role-common
    # - ansible-role-maven
    - role: geerlingguy.docker
    - role: singleplatform-eng.users
      users:
      - username: vagrant
        # 'wheel', - BSD
        groups: ['sudo', 'docker','adm']
        append: yes
        uid: 1000
        home: /home/vagrant
    - role: bossjones.bootstrap
    - role: bossjones.python
    # - role: bossjones.ansible-vagrant-setup
    # - role: bossjones.perf-tools
    - role: debops.apt
    - role: debops.bootstrap
    - role: debops.core
    - role: debops.debug
    # - { role: debops.ntp,                       tags: [ "role::ntp" ] }
    # - { role: debops.swapfile,                  tags: [ "role::swapfile" ] }
    # SOURCE: https://stackoverflow.com/questions/33505521/ansible-can-i-use-arithmetic-when-setting-a-variable-value
    - role: debops.swapfile
      swapfile_size: '{{ 2 * ansible_memtotal_mb }}'
    # - role: bossjones.ufw

    # - role: bossjones-ipv6
    # - role: ksylvan.docker
    # - role: motd
    # - role: bossjones-firewalld
    # - role: mjanser.powerline
    # - role: joshualund.golang
    # - role: common
    #   theme: "powerline-plain"
    #   repository: https://github.com/revans/bash-it.git
    #   version: master
    #   aliases:
    #     - general
    #   plugins:
    #     - base
    #     - history
    #   completions:
    #     - git
    # - role: bossjones-cli-tools


- hosts: docker_swarm_manager:docker_swarm_worker
  gather_facts: yes
  vars:
    reg_expression:
      - ".*hard.*memlock.*unlimited"
      - ".*soft.*memlock.*unlimited"
      - ".*hard.*nofile.*65536"
    insertvalue:
      - "* hard memlock unlimited"
      - "* soft memlock unlimited"
      - "* hard nofile 65536"
  # SOURCE: https://github.com/ball6847/ansible-gitlab-ci/blob/9c90c8c7e5852b4a9982bb8f7dcfc45951ea6802/swarm.yml
  serial: 1
  become: yes
  become_method: sudo
  tags:
    - docker_swarm
  # vars_files:
  #   - vars/main.yml
  roles:
    # NOTE: NB: If you are installing Docker on a Raspberry running Raspbian or any other Debian-like OS make sure to set docker_dependencies: [ ] otherwise Ansible will fail because the linux-image-extra-virtual package is not available for the arm architecture (see issue #4).
    - role: atosatto.docker-swarm
      docker_swarm_interface: eth1
      docker_swarm_port: 2377
      docker_swarm_network: 10.10.8.0/24
      skip_engine: True
      skip_group: True
      skip_swarm: False
      skip_docker_py: True

  pre_tasks:

    # source: https://github.com/pascalandy/tutorial-do/blob/master/ansible/site.yml
    # - name: 'install python2'
    #   raw: apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade && apt-get -y install python-simplejson

    - name: Fail if Ansible is ancient
      fail: msg="We need Ansible >= 2.0. Please update your kit. 'pip install -U Ansible'"
      when: ansible_version.major < 2
      tags:
        - always

    - name: Include vars from local-configure.yml if found
      include_vars: "{{ item }}"
      with_first_found:
       - null.yml

    - name: Install jq
      apt: name=jq state=latest install_recommends=yes
      become: yes

    - lineinfile:
        path: /etc/security/limits.conf
        regexp: "{{item.0}}"
        line: "{{item.1}}"
        state: present
        insertbefore: "^\\#\\*"
      with_together:
        - "{{reg_expression}}"
        - "{{insertvalue}}"
      become: yes

    - lineinfile:
        path: /etc/sysctl.conf
        regexp: "^vm.max_map_count = 262144"
        line: vm.max_map_count = 262144
        state: present
        insertbefore: EOF
      become: yes

    # SOURCE: https://github.com/idegard/ansible-simple-swarm/blob/8272763a350d88b64380160af2512f8d271055c1/basic.yml
    - name: Esure IP address of all hosts to all hosts
      lineinfile:
        dest: /etc/hosts
        line: "{{ hostvars[item]['ansible_default_ipv4']['address'] }} {{ hostvars[item].inventory_hostname }} {{ hostvars[item].inventory_hostname_short }}"
        state: present
      with_items: "{{ groups.all }}"

  # tasks:
  #     - name: reboot the system before install
  #       become: yes
  #       shell: sleep 2 && /sbin/shutdown -r now "reboot the system before install"
  #       async: 1
  #       poll: 0

  #     - name: waiting for server to come back
  #       local_action: wait_for host={{ ansible_default_ipv4.address }} port=22 state=started delay=30 timeout=1000
  #       sudo: false
